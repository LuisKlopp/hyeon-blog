[
  {
    "slug": "blog/code-blocks",
    "title": "Lets see what we can do with rehype pretty code",
    "description": "Syntax highlighting, line numbers, line highlights, word highlights",
    "date": "2024-03-04T00:00:00.000Z",
    "published": true,
    "body": "const{Fragment:n,jsx:e,jsxs:r}=arguments[0];function _createMdxContent(t){const i={a:\"a\",code:\"code\",h2:\"h2\",h3:\"h3\",hr:\"hr\",p:\"p\",pre:\"pre\",...t.components};return r(n,{children:[r(i.p,{children:[e(i.a,{href:\"https://github.com/atomiks/rehype-pretty-code\",children:e(i.code,{children:\"rehype-pretty-code\"})}),\" is a Rehype plugin powered by the\\n\",e(i.a,{href:\"https://github.com/shikijs/shiki\",children:e(i.code,{children:\"shiki\"})}),\" syntax highlighter that provides beautiful code blocks for Markdown or MDX. It works on both the server at build-time (avoiding runtime syntax highlighting) and on the client for dynamic highlighting.\"]}),\"\\n\",e(i.h2,{children:\"Editor-Grade Highlighting\"}),\"\\n\",e(\"span\",{className:\"mix-blend-plus-lighter text-zinc-400/80\",children:e(i.p,{children:\"Enjoy the accuracy and granularity of VS Code's\\nsyntax highlighting engine and the popularity of\\nits themes ecosystem â€” use any VS Code theme you\\nwant!\"})}),\"\\n\",e(i.h2,{children:\"Line Numbers and Line Highlighting\"}),\"\\n\",e(i.p,{children:\"Draw attention to a particular line of code.\"}),\"\\n\",e(i.pre,{children:e(i.code,{className:\"language-js\",children:'import { useFloating } from \"@floating-ui/react\";\\n\\nfunction MyComponent() {\\n  const { refs, floatingStyles } = useFloating();\\n\\n  return (\\n    <>\\n      <div ref={refs.setReference} />\\n      <div\\n        ref={refs.setFloating}\\n        style={floatingStyles}\\n      />\\n    </>\\n  );\\n}\\n'})}),\"\\n\",e(i.h2,{children:\"Word Highlighting\"}),\"\\n\",e(i.p,{children:\"Draw attention to a particular word or series of characters.\"}),\"\\n\",e(i.pre,{children:e(i.code,{className:\"language-js\",children:'import { useFloating } from \"@floating-ui/react\";\\n\\nfunction MyComponent() {\\n  const { refs, floatingStyles } = useFloating();\\n\\n  return (\\n    <>\\n      <div ref={refs.setReference} />\\n      <div\\n        ref={refs.setFloating}\\n        style={floatingStyles}\\n      />\\n    </>\\n  );\\n}\\n'})}),\"\\n\",e(i.h2,{children:\"ANSI Highlighting\"}),\"\\n\",e(i.pre,{children:e(i.code,{className:\"language-ansi\",children:\"\u001b[0;36m  vite v5.0.0\u001b[0;32m dev server running at:\u001b[0m\\n\\n  > Local: \u001b[0;36mhttp://localhost:\u001b[0;36;1m3000\u001b[0;36m/\u001b[0m\\n  > Network: \u001b[0;2muse `--host` to expose\u001b[0m\\n\\n  \u001b[0;36mready in 125ms.\u001b[0m\\n\\n\u001b[0;2m8:38:02 PM\u001b[0m \u001b[0;36;1m[vite]\u001b[0m \u001b[0;32mhmr update \u001b[0;2m/src/App.jsx\\n\"})}),\"\\n\",r(i.p,{children:[\"Inline ANSI: \",e(i.code,{children:\"> Local: \u001b[0;36mhttp://localhost:\u001b[0;36;1m3000\u001b[0;36m/\u001b[0m{:ansi}\"})]}),\"\\n\",e(i.hr,{}),\"\\n\",e(i.h3,{children:\"Kitchen Sink Meta Strings\"}),\"\\n\",e(i.pre,{children:e(i.code,{className:\"language-js\",children:'function isEven(number) {\\n  if (number === 1) {\\n    return false;\\n  } else if (number === 2) {\\n    return true;\\n  } else if (number === 3) {\\n    return false;\\n  } else if (number === 4) {\\n    return true;\\n  } else if (number === 5) {\\n    return false;\\n  } else if (number === 6) {\\n    return true;\\n  } else if (number === 7) {\\n    return false;\\n  } else if (number === 8) {\\n    return true;\\n  } else if (number === 9) {\\n    return false;\\n  } else if (number === 10) {\\n    return true;\\n  } else {\\n    return \"Number is not between 1 and 10.\";\\n  }\\n}\\n\\n// Example usage:\\nconsole.log(isEven(3)); // Should return false\\nconsole.log(isEven(4)); // Should return true\\nconsole.log(isEven(11)); // Should return \"Number is not between 1 and 10.\"\\n'})})]})}return{default:function(n={}){const{wrapper:r}=n.components||{};return r?e(r,{...n,children:e(_createMdxContent,{...n})}):_createMdxContent(n)}};",
    "slugAsParams": "code-blocks"
  },
  {
    "slug": "blog/hello-world",
    "title": "Hello World",
    "description": "This is our first post",
    "date": "2024-03-07T00:00:00.000Z",
    "published": true,
    "body": "const{Fragment:e,jsx:n,jsxs:o}=arguments[0];function _createMdxContent(t){const r={code:\"code\",h1:\"h1\",h3:\"h3\",p:\"p\",...t.components},{Callout:c}=r;return c||function(e,n){throw new Error(\"Expected \"+(n?\"component\":\"object\")+\" `\"+e+\"` to be defined: you likely forgot to import, pass, or provide it.\")}(\"Callout\",!0),o(e,{children:[n(c,{children:\"Hello I am a callout\"}),\"\\n\",n(r.h1,{children:\"Hello World\"}),\"\\n\",o(r.p,{children:[\"Welcome to my blog \",n(r.code,{children:\"inline code\"})]}),\"\\n\",n(r.h3,{children:\"Header 3\"})]})}return{default:function(e={}){const{wrapper:o}=e.components||{};return o?n(o,{...e,children:n(_createMdxContent,{...e})}):_createMdxContent(e)}};",
    "slugAsParams": "hello-world"
  },
  {
    "slug": "blog/second-world",
    "title": "Second World",
    "description": "This is our second post",
    "date": "2024-03-12T00:00:00.000Z",
    "published": true,
    "body": "const{Fragment:n,jsx:e,jsxs:t}=arguments[0];function _createMdxContent(r){const o={h1:\"h1\",p:\"p\",...r.components};return t(n,{children:[e(o.h1,{children:\"Hello World\"}),\"\\n\",e(o.p,{children:\"Welcome to my blog\"})]})}return{default:function(n={}){const{wrapper:t}=n.components||{};return t?e(t,{...n,children:e(_createMdxContent,{...n})}):_createMdxContent(n)}};",
    "slugAsParams": "second-world"
  }
]